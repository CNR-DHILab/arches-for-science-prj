{% extends 'views/components/iiif-annotation.htm' %}
{% load i18n %}

{% block workbench %}
<!-- ko if: $data.hasLoaded() -->
    <!-- ko with: $data, as: 'self' -->
        {{ block.super }}
    <!-- /ko -->
<!-- /ko -->
{% endblock workbench %}

{% block tabs %}
<div class="workbench-card-sidebar-tab" data-bind="click: function() {
    toggleTab('dataset');
}, css: {
    'active': activeTab() === 'dataset'
}">
    <i class="fa fa-file"></i>
    <span class="map-sidebar-text">{% trans 'Dataset' %}</span>
</div>
{% endblock tabs %}

{% block sidepanel %}
    <!-- ko if: $data.activeTab() === 'dataset' -->

    <div class="workbench-header-buffer">
        <div class="workbench-card-sidepanel-header-container">
            <h4 class="workbench-card-sidepanel-header" data-bind="click: hideSidePanel, text: 'Regions'"></h4>
        </div>
    </div>


    <div data-bind="css: card.model.cssclass">
        <div class="new-provisional-edit-card-container">
            <div class="card">
                <div style="padding: 10px 0;">
                    <h5>{% trans 'Region locations' %}</h5>
            
                    <div
                        style="
                            margin-left: 5px;
                            margin-right: 15px;
                        "
                    >
                        <input 
                            type="text" 
                            placeholder="{% trans 'filter...' %}"
                            style="
                                width: 100%;
                                height: 36px;
                                border: 1px solid #ddd;
                                border-bottom: none;
                            "
                        >

                        <div
                            style="
                                height: 100px;
                                border: 1px solid #ddd;
                                overflow-y: scroll;
                            "
                        >
                            <table
                                style="
                                    display: flex;
                                    flex-direction: column;
                                    width: 100%;
                                "
                            >
                                <tbody
                                    class="dataset-table"
                                    style="
                                        display: flex;
                                        flex-direction: column;
                                    "
                                >
                                    <!-- ko foreach: $data.observationInstances()-->
                                        <tr
                                            data-bind="text: (function(){
                                                var partIdentifierAssignmentLabelNodeId = '3e541cc6-859b-11ea-97eb-acde48001122';
                                                return $data.data[partIdentifierAssignmentLabelNodeId]();
                                            })()"
                                        ></tr>
                                    <!-- /ko -->
                                </tbody>
                            </table>
                        </div>
        
                        <button
                            type="button"
                            class="btn"
                            style="
                                margin-top: 6px;
                                background: #9490EE;
                                color: #eee;
                                width: 100%;
                            "
                        >
                            <i class="fa fa-folder"></i>
                            <span>
                                {% trans 'Add New Observation' %}
                            </span>
                        </button>
                    </div>
                </div>

                <!-- ko if: card.widgets().length > 0 -->
                {% block form_widgets %}
                    <form class="widgets" style="margin-bottom: 20px;">
                        <!-- ko if: $data.partIdentifierAssignmentLabelWidget() -->
                            <h5 class="analysis-areas-annotation-step-widget-title">{% trans 'Name for Region (Part)' %}</h5>
                            <i data-bind="css: {'ion-asterisk widget-label-required': self.form.nodeLookup[$data.partIdentifierAssignmentLabelWidget().node_id()].isrequired}"></i>

                            <div 
                                data-bind='
                                    component: {
                                        name: self.form.widgetLookup[$data.partIdentifierAssignmentLabelWidget().widget_id()].name,
                                        params: {
                                            formData: self.tile.formData,
                                            tile: self.tile,
                                            form: self.form,
                                            config: $data.partIdentifierAssignmentLabelWidget().configJSON,
                                            label: $data.partIdentifierAssignmentLabelWidget().label(),
                                            value: self.tile.data[$data.partIdentifierAssignmentLabelWidget().node_id()],
                                            node: self.form.nodeLookup[$data.partIdentifierAssignmentLabelWidget().node_id()],
                                            expanded: self.expanded,
                                            graph: self.form.graph,
                                            type: "resource-editor",
                                            disabled: !self.card.isWritable && !self.preview,
                                        }
                                    }, 
                                    css:{
                                        "active": $data.partIdentifierAssignmentLabelWidget().selected,
                                        "hover": $data.partIdentifierAssignmentLabelWidget().hovered,
                                        "$data.partIdentifierAssignmentLabelWidget()-preview": self.preview
                                    }, 
                                    click: function(data, e) {
                                        if (!$data.partIdentifierAssignmentLabelWidget().selected() && self.preview) $data.partIdentifierAssignmentLabelWidget().selected(true);
                                    }, 
                                    event: {
                                        mouseover: function(){
                                            if (self.preview) $data.partIdentifierAssignmentLabelWidget().hovered(true);
                                        },
                                        mouseout: function(){
                                            if (self.preview) $data.partIdentifierAssignmentLabelWidget().hovered(null);
                                        }
                                    }, 
                                    visible: $data.partIdentifierAssignmentLabelWidget().visible
                                '
                            ></div>
                        <!-- /ko -->

                        <div data-bind="foreach: {
                                data:card.widgets, as: 'widget'
                            }">
                            <!-- ko if: ko.unwrap(self.form.nodeLookup[widget.node_id()].datatype) === 'annotation' -->
                                <h5 class="analysis-areas-annotation-step-widget-title">
                                    {% trans 'Location' %}
                                </h5>

                                <i data-bind="css: {'ion-asterisk widget-label-required': self.form.nodeLookup[widget.node_id()].isrequired}"></i>

                                <div class="col-xs-12">
                                    <div class="style-tools-collapser" data-bind=" click: function() {
                                        self.showStylingTools(!self.showStylingTools());
                                    }">
                                        <span data-bind="text: self.showStylingTools() ? '{% trans "Hide Style Tools" %}' : '{% trans "Show Style Tools" %}'"></span>
                                        <i class="fa" data-bind="{
                                            css: {
                                                'fa-caret-down' : !self.showStylingTools(),
                                                'fa-caret-up' : self.showStylingTools(),
                                            }
                                        }"></i>
                                    </div>
                                    <div class="form-horizontal" data-bind="if: self.showStylingTools">
                                        <div class="style-tools-panel">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">{% trans "Line Color" %}</label>
                                                <div class="col-sm-8">
                                                    <div class="colorpicker-component input-group">
                                                        <input placeholder="{% trans "Line Color " %}" class="form-control input-md widget-input" data-bind="colorPicker: {color: self.lineColor, format:'hex'}">
                                                        <span class="input-group-addon style-tools-color-visualizer" data-bind="style: {background: self.lineColor}"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">{% trans "Fill color" %}</label>
                                                <div class="col-sm-8">
                                                    <div class="colorpicker-component input-group">
                                                        <input placeholder="{% trans "Fill Color " %}" class="form-control input-md widget-input" data-bind="colorPicker: {color: self.fillColor, format:'hex'}">
                                                        <span class="input-group-addon style-tools-color-visualizer" data-bind="style: {background: self.fillColor}"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">{% trans "Line Width" %}</label>
                                                <div class="col-sm-8">
                                                    <input type="number" placeholder="" class="form-control" data-bind="valueUpdate: 'keyup', value: self.lineWidth">
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">{% trans "Line Opacity" %}</label>
                                                <div class="col-sm-8">
                                                    <input type="number" placeholder="" class="form-control" data-bind="valueUpdate: 'keyup', value: self.lineOpacity">
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">{% trans "Point Radius" %}</label>
                                                <div class="col-sm-8">
                                                    <input type="number" placeholder="" class="form-control" data-bind="valueUpdate: 'keyup', value: self.pointRadius">
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">{% trans "Fill Opacity" %}</label>
                                                <div class="col-sm-8">
                                                    <input type="number" placeholder="" class="form-control" data-bind="valueUpdate: 'keyup', value: self.fillOpacity">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="map-card-feature-list">
                                        <div class="add-new-feature" data-bind="visible: !self.disableDrawing()">
                                            <select data-placeholder="{% trans "Add a new feature..." %}" data-bind="
                                                value: self.featureLookup[widget.node_id()].selectedTool,
                                                valueAllowUnset: true,
                                                options: [
                                                    {
                                                        value: '',
                                                        text: ''
                                                    },
                                                    {
                                                        value: 'draw_point',
                                                        text: 'Add point'
                                                    },
                                                    {
                                                        value: 'draw_line_string',
                                                        text: 'Add line'
                                                    },
                                                    {
                                                        value: 'draw_polygon',
                                                        text: 'Add polygon'
                                                    }
                                                ],
                                                optionsText: 'text',
                                                optionsValue: 'value',
                                                chosen: {
                                                    'width': '100%',
                                                    'disable_search_threshold': 10,
                                                    'allow_single_deselect': true
                                                }
                                            "></select>
                                        </div>
                                        <div class="add-new-feature" data-bind="visible: self.disableDrawing">
                                            <select data-placeholder="{% trans "Add a new feature..." %}" data-bind="
                                                value: self.featureLookup[widget.node_id()].selectedTool,
                                                valueAllowUnset: true,
                                                options: [
                                                    {
                                                        value: '',
                                                        text: ''
                                                    },
                                                    {
                                                        value: 'draw_point',
                                                        text: 'Add point'
                                                    },
                                                    {
                                                        value: 'draw_line_string',
                                                        text: 'Add line'
                                                    },
                                                    {
                                                        value: 'draw_polygon',
                                                        text: 'Add polygon'
                                                    }
                                                ],
                                                optionsText: 'text',
                                                optionsValue: 'value',
                                                chosen: {
                                                    disabled: true,
                                                    'width': '100%',
                                                    'disable_search_threshold': 10,
                                                    'allow_single_deselect': true
                                                }
                                            "></select>
                                        </div>
                                    </div>
                                    <table class="table">
                                        <tbody>
                                            <!-- ko foreach: {data: self.featureLookup[widget.node_id()].features, as: 'feature'} -->
                                            <tr class="map-card-feature-item" data-bind="css: {'active': self.selectedFeatureIds().indexOf(feature.id) >= 0}, click: function() { self.showFeature(feature); }">
                                                <td>
                                                    <span class="map-card-feature-name" data-bind="text: feature.geometry.type"></span>
                                                </td>
                                                <td class="map-card-feature-tool">
                                                    <a href="javascript:void(0);" data-bind="click: function() { self.editFeature(feature); }, clickBubble: false">
                                                        <i class="fa fa-pencil map-card-feature-edit"></i>
                                                        {% trans "Edit" %}
                                                    </a>
                                                </td>
                                                <td class="map-card-feature-tool">
                                                    <a href="javascript:void(0);" data-bind="click: function() { self.deleteFeature(feature); }, clickBubble: false">
                                                        <i class="fa fa-trash map-card-feature-delete"></i>
                                                        {% trans "Delete" %}
                                                    </a>
                                                </td>
                                            </tr>
                                            <!-- /ko -->
                                        </tbody>
                                    </table>
                                </div>
                            <!-- /ko -->
                        </div>

                        <!-- ko if: $data.partIdentifierAssignmentPhysicalPartOfObjectWidget() -->
                            <h5 class="analysis-areas-annotation-step-widget-title">{% trans 'Image Service' %}</h5>
                            <i data-bind="css: {'ion-asterisk widget-label-required': self.form.nodeLookup[$data.partIdentifierAssignmentPhysicalPartOfObjectWidget().node_id()].isrequired}"></i>

                            <div 
                                data-bind='
                                    component: {
                                        name: self.form.widgetLookup[$data.partIdentifierAssignmentPhysicalPartOfObjectWidget().widget_id()].name,
                                        params: {
                                            formData: self.tile.formData,
                                            tile: self.tile,
                                            form: self.form,
                                            config: $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().configJSON,
                                            label: $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().label(),
                                            value: self.tile.data[$data.partIdentifierAssignmentPhysicalPartOfObjectWidget().node_id()],
                                            node: self.form.nodeLookup[$data.partIdentifierAssignmentPhysicalPartOfObjectWidget().node_id()],
                                            expanded: self.expanded,
                                            graph: self.form.graph,
                                            type: "resource-editor",
                                            disabled: !self.card.isWritable && !self.preview,
                                        }
                                    }, 
                                    css:{
                                        "active": $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().selected,
                                        "hover": $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().hovered,
                                        "$data.partIdentifierAssignmentPhysicalPartOfObjectWidget()-preview": self.preview
                                    }, 
                                    click: function(data, e) {
                                        if (!$data.partIdentifierAssignmentPhysicalPartOfObjectWidget().selected() && self.preview) $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().selected(true);
                                    }, 
                                    event: {
                                        mouseover: function(){
                                            if (self.preview) $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().hovered(true);
                                        },
                                        mouseout: function(){
                                            if (self.preview) $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().hovered(null);
                                        }
                                    }, 
                                    visible: $data.partIdentifierAssignmentPhysicalPartOfObjectWidget().visible
                                '
                            ></div>
                        <!-- /ko -->

                        <!-- ko if: $data.partIdentifierAssignmentAnnotatorWidget() -->
                            <h5 class="analysis-areas-annotation-step-widget-title">{% trans 'Annotator' %}</h5>
                            <i data-bind="css: {'ion-asterisk widget-label-required': self.form.nodeLookup[$data.partIdentifierAssignmentAnnotatorWidget().node_id()].isrequired}"></i>

                            <div 
                                data-bind='
                                    component: {
                                        name: self.form.widgetLookup[$data.partIdentifierAssignmentAnnotatorWidget().widget_id()].name,
                                        params: {
                                            formData: self.tile.formData,
                                            tile: self.tile,
                                            form: self.form,
                                            config: $data.partIdentifierAssignmentAnnotatorWidget().configJSON,
                                            label: $data.partIdentifierAssignmentAnnotatorWidget().label(),
                                            value: self.tile.data[$data.partIdentifierAssignmentAnnotatorWidget().node_id()],
                                            node: self.form.nodeLookup[$data.partIdentifierAssignmentAnnotatorWidget().node_id()],
                                            expanded: self.expanded,
                                            graph: self.form.graph,
                                            type: "resource-editor",
                                            disabled: !self.card.isWritable && !self.preview,
                                        }
                                    }, 
                                    css:{
                                        "active": $data.partIdentifierAssignmentAnnotatorWidget().selected,
                                        "hover": $data.partIdentifierAssignmentAnnotatorWidget().hovered,
                                        "$data.partIdentifierAssignmentAnnotatorWidget()-preview": self.preview
                                    }, 
                                    click: function(data, e) {
                                        if (!$data.partIdentifierAssignmentAnnotatorWidget().selected() && self.preview) $data.partIdentifierAssignmentAnnotatorWidget().selected(true);
                                    }, 
                                    event: {
                                        mouseover: function(){
                                            if (self.preview) $data.partIdentifierAssignmentAnnotatorWidget().hovered(true);
                                        },
                                        mouseout: function(){
                                            if (self.preview) $data.partIdentifierAssignmentAnnotatorWidget().hovered(null);
                                        }
                                    }, 
                                    visible: $data.partIdentifierAssignmentAnnotatorWidget().visible
                                '
                            ></div>
                        <!-- /ko -->
                    </form>
                {% endblock form_widgets %}
                <!-- /ko -->

                {% block form_buttons %}
                    <!-- ko if: $data.tileDirty() -->
                    <div
                        style="
                            display: flex;
                            justify-content: space-between;
                            padding: 0 5px;
                        "
                    >
                        <button 
                            class="btn btn-success" 
                            style="width: 48%;"
                            data-bind="click: $data.saveObservationTile"
                        >
                            <i class="ion-android-cloud-done"></i>
                            <span style="padding-left: 4px">{% trans 'Save' %}</span>
                        </button>
                        <button 
                            class="btn btn-danger" 
                            style="width: 48%;"
                            data-bind="click: $data.tile.reset"
                        >
                            <i class="ion-android-cancel"></i>
                            <span style="padding-left: 4px">{% trans 'Cancel' %}</span>
                        </button>
                    </div>
                    <!-- /ko -->
                {% endblock form_buttons %}
            </div>
        </div>
    </div>
    <!-- /ko -->

    {{ block.super }}
{% endblock sidepanel %}
